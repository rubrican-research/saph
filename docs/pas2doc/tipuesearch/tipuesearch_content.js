var tipuesearch = {"pages": [
     {"title": "Obj.Listener", "text": "   ", "tags": "", "url": "Obj.Listener.html"},
     {"title": "Obj.Listener.TListener", "text": "TListener   ", "tags": "", "url": "Obj.Listener.TListener.html"},
     {"title": "Obj.Listener.TListener.beforeDo", "text": "   ", "tags": "", "url": "Obj.Listener.TListener.html#beforeDo"},
     {"title": "Obj.Listener.TListener.afterDo", "text": "   ", "tags": "", "url": "Obj.Listener.TListener.html#afterDo"},
     {"title": "Obj.Listener.TListener.Create", "text": "    ", "tags": "", "url": "Obj.Listener.TListener.html#Create"},
     {"title": "Obj.Listener.TListener.add", "text": "    ", "tags": "", "url": "Obj.Listener.TListener.html#add"},
     {"title": "Obj.Listener.TListener.add", "text": "    ", "tags": "", "url": "Obj.Listener.TListener.html#add"},
     {"title": "Obj.Listener.TListener.add", "text": "    ", "tags": "", "url": "Obj.Listener.TListener.html#add"},
     {"title": "Obj.Listener.TListener.do_", "text": "    ", "tags": "", "url": "Obj.Listener.TListener.html#do_"},
     {"title": "Obj.Listener.TListener.getAsJSON", "text": "    ", "tags": "", "url": "Obj.Listener.TListener.html#getAsJSON"},
     {"title": "Obj.Listener.TListener.Enabled", "text": "   ", "tags": "", "url": "Obj.Listener.TListener.html#Enabled"},
     {"title": "Obj.Listener.TListener.AsString", "text": "   ", "tags": "", "url": "Obj.Listener.TListener.html#AsString"},
     {"title": "Obj.Listener.TListenerProcList", "text": "TListenerProcList   ", "tags": "", "url": "Obj.Listener.TListenerProcList.html"},
     {"title": "Obj.Listener.TListenerProcList.key", "text": "   ", "tags": "", "url": "Obj.Listener.TListenerProcList.html#key"},
     {"title": "Obj.Listener.TListenerProcList.beforeDo", "text": "   ", "tags": "", "url": "Obj.Listener.TListenerProcList.html#beforeDo"},
     {"title": "Obj.Listener.TListenerProcList.afterDo", "text": "   ", "tags": "", "url": "Obj.Listener.TListenerProcList.html#afterDo"},
     {"title": "Obj.Listener.TListenerProcList.Add", "text": "    ", "tags": "", "url": "Obj.Listener.TListenerProcList.html#Add"},
     {"title": "Obj.Listener.TListenerProcList.Destroy", "text": "    ", "tags": "", "url": "Obj.Listener.TListenerProcList.html#Destroy"},
     {"title": "Obj.Listener.TEventListenerMap", "text": "TEventListenerMap   ", "tags": "", "url": "Obj.Listener.TEventListenerMap.html"},
     {"title": "Obj.Listener.TEventListenerMap.Create", "text": "    ", "tags": "", "url": "Obj.Listener.TEventListenerMap.html#Create"},
     {"title": "Obj.Listener.TEventListenerMap.Destroy", "text": "    ", "tags": "", "url": "Obj.Listener.TEventListenerMap.html#Destroy"},
     {"title": "Obj.Listener.TEventListenerMap.Add", "text": "    ", "tags": "", "url": "Obj.Listener.TEventListenerMap.html#Add"},
     {"title": "Obj.Listener.TObjectEventList", "text": "TObjectEventList   ", "tags": "", "url": "Obj.Listener.TObjectEventList.html"},
     {"title": "Obj.Listener.TObjectEventList.Destroy", "text": "    ", "tags": "", "url": "Obj.Listener.TObjectEventList.html#Destroy"},
     {"title": "Obj.Listener.TObjectListenerHelper", "text": "TObjectListenerHelper   ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html"},
     {"title": "Obj.Listener.TObjectListenerHelper.Listeners", "text": "    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#Listeners"},
     {"title": "Obj.Listener.TObjectListenerHelper.Listener", "text": "Returns the list of listeners for this particular object!    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#Listener"},
     {"title": "Obj.Listener.TObjectListenerHelper.addListener", "text": "================================================================    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#addListener"},
     {"title": "Obj.Listener.TObjectListenerHelper.addListener", "text": "Array of events -&gt; single listener Method    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#addListener"},
     {"title": "Obj.Listener.TObjectListenerHelper.addListener", "text": "Array of Listener Methods    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#addListener"},
     {"title": "Obj.Listener.TObjectListenerHelper.addListener", "text": "================================================================    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#addListener"},
     {"title": "Obj.Listener.TObjectListenerHelper.addListener", "text": "Array of events -&gt; single listener Proc    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#addListener"},
     {"title": "Obj.Listener.TObjectListenerHelper.addListener", "text": "Array of Listener Procs    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#addListener"},
     {"title": "Obj.Listener.TObjectListenerHelper.addListener", "text": "================================================================    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#addListener"},
     {"title": "Obj.Listener.TObjectListenerHelper.addListener", "text": "Array of events -&gt; single listener Notify Event    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#addListener"},
     {"title": "Obj.Listener.TObjectListenerHelper.addListener", "text": "Array of Notify Events    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#addListener"},
     {"title": "Obj.Listener.TObjectListenerHelper.rmListeners", "text": "================================================================    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#rmListeners"},
     {"title": "Obj.Listener.TObjectListenerHelper.rmListeners", "text": "Removes all listeners on this object    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#rmListeners"},
     {"title": "Obj.Listener.TObjectListenerHelper.rmListeners", "text": "Removes listeners on this event of this object    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#rmListeners"},
     {"title": "Obj.Listener.TObjectListenerHelper.signal", "text": "Removes listeners that belong to this subscriber Invokes listeners    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#signal"},
     {"title": "Obj.Listener.TObjectListenerHelper.signals", "text": "Returns a list of signal names that have been registered    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#signals"},
     {"title": "Obj.Listener.TObjectListenerHelper.memdump", "text": "    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#memdump"},
     {"title": "Obj.Listener.TObjectListenerHelper.activeSignalCount", "text": "TODO &ndash; still evaluating if this is a good idea. &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;- function async(_p: TProcedure; _invoke: TInvokeType = qAsync): int64; function async(_p: TProcedureOfObject; _invoke: TInvokeType = qAsync): int64; function async(_p: TDataEvent; _invoke: TInvokeType = qAsync): int64; function async(_p: TNotifyEvent; _invoke: TInvokeType = qAsync): int64; function async(_p: TNotifyCallBack; _invoke: TInvokeType = qAsync): int64; function await(_p: TProcedure; _invoke: TInvokeType = qAsync): int64; function await(_p: TProcedureOfObject; _invoke: TInvokeType = qAsync): int64; function await(_p: TDataEvent; _invoke: TInvokeType = qAsync): int64; function await(_p: TNotifyEvent; _invoke: TInvokeType = qAsync): int64; function await(_p: TNotifyCallBack; _invoke: TInvokeType = qAsync): int64;    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#activeSignalCount"},
     {"title": "Obj.Listener.TObjectListenerHelper.objectAlive", "text": "Returns total number of all signals that are active at the present moment. This is not the count of active signals of this object. Is this object currenly alive ? hack to handle cases where the memory address will be accessed but we don't know if the object has been freed.    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#objectAlive"},
     {"title": "Obj.Listener.TObjectListenerHelper.stopListening", "text": "You should call this in the destructor of your objects that are listening to signals. This is for listener objects, not signalling. It removes all methods that were added as listeners across all objects in the library.    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#stopListening"},
     {"title": "Obj.Listener.TObjectListenerHelper.beforeDestruction", "text": "Implicitly hiding beforeDestruction so that we can hack into object destruction and remove listeners    ", "tags": "", "url": "Obj.Listener.TObjectListenerHelper.html#beforeDestruction"},
     {"title": "Obj.Listener.isObjectAlive", "text": "Hack to check if an object address points to a valid object.    ", "tags": "", "url": "Obj.Listener.html#isObjectAlive"},
     {"title": "Obj.Listener.Breathe", "text": "calls Application.ProcessMessages if _hold milliseconds have passed since last &quot;breath&quot;    ", "tags": "", "url": "Obj.Listener.html#Breathe"},
     {"title": "Obj.Listener.TListenerProc", "text": "These are Event Listeners. Implement procedures with this signaturs in the main program and then assign them to the event using addListener. In the implementation of the procedure, you have access to: _sender: This is the Control that sent the signal - the control on which addListener was called _event: The event. Text. You can implement a case structure to handle multiple events. _params: Parameters as a JSONObject. DO NOT free the object inside your listener procedure!! The runner with free it after the procedure is called.    ", "tags": "", "url": "Obj.Listener.html#TListenerProc"},
     {"title": "Obj.Listener.TListenerMethod", "text": "    ", "tags": "", "url": "Obj.Listener.html#TListenerMethod"},
     {"title": "Obj.Listener.TArrayListenerProc", "text": "Syntax sugar. To assign multiple listeners in one go.   ", "tags": "", "url": "Obj.Listener.html#TArrayListenerProc"},
     {"title": "Obj.Listener.TArrayListenerMethod", "text": "   ", "tags": "", "url": "Obj.Listener.html#TArrayListenerMethod"},
     {"title": "Obj.Listener.TInvokeType", "text": "    qAsync    qThreads  Queues the listeners to Application.QueueAsyncCall();  qSerial  Runs the methods in individual threads; ", "tags": "", "url": "Obj.Listener.html#TInvokeType"},
     {"title": "Obj.Listener.TListenerSignalMode", "text": "    lmSingleton    lmDynamic   ", "tags": "", "url": "Obj.Listener.html#TListenerSignalMode"},
     {"title": "Obj.Listener.ListenerSignalMode", "text": "ListenerSignalMode: TListenerSignalMode = lmSingleton;   ", "tags": "", "url": "Obj.Listener.html#ListenerSignalMode"},
     {"title": "Obj.Listener.runnerCS", "text": "   ", "tags": "", "url": "Obj.Listener.html#runnerCS"},
     {"title": "saph.lists", "text": "   ", "tags": "", "url": "saph.lists.html"},
     {"title": "saph.lists.TSelectList", "text": "TSelectList   ", "tags": "", "url": "saph.lists.TSelectList.html"},
     {"title": "saph.lists.TSelectList.Create", "text": "Count of unselected items    ", "tags": "", "url": "saph.lists.TSelectList.html#Create"},
     {"title": "saph.lists.TSelectList.Destroy", "text": "    ", "tags": "", "url": "saph.lists.TSelectList.html#Destroy"},
     {"title": "saph.lists.TSelectList.add", "text": "    ", "tags": "", "url": "saph.lists.TSelectList.html#add"},
     {"title": "saph.lists.TSelectList.remove", "text": "Add an Item to the list    ", "tags": "", "url": "saph.lists.TSelectList.html#remove"},
     {"title": "saph.lists.TSelectList.listAll", "text": "Remove an item from the list. Requires the item object as a parameter Returns a specialized TFPGObjectList object with the items in the same order as the main list. The list object does not own the items. You have to free the list object after you are done.    ", "tags": "", "url": "saph.lists.TSelectList.html#listAll"},
     {"title": "saph.lists.TSelectList.listSelected", "text": "    ", "tags": "", "url": "saph.lists.TSelectList.html#listSelected"},
     {"title": "saph.lists.TSelectList.listUnselected", "text": "    ", "tags": "", "url": "saph.lists.TSelectList.html#listUnselected"},
     {"title": "saph.lists.TSelectList.resetSelection", "text": "    ", "tags": "", "url": "saph.lists.TSelectList.html#resetSelection"},
     {"title": "saph.lists.TSelectList.clear", "text": "Unselects all selected items    ", "tags": "", "url": "saph.lists.TSelectList.html#clear"},
     {"title": "saph.lists.TSelectList.exists", "text": "Returns true if this object is present in the list    ", "tags": "", "url": "saph.lists.TSelectList.html#exists"},
     {"title": "saph.lists.TSelectList.indexOf", "text": "    ", "tags": "", "url": "saph.lists.TSelectList.html#indexOf"},
     {"title": "saph.lists.TSelectList.selected", "text": "   ", "tags": "", "url": "saph.lists.TSelectList.html#selected"},
     {"title": "saph.lists.TSelectList.all", "text": "   ", "tags": "", "url": "saph.lists.TSelectList.html#all"},
     {"title": "saph.lists.TSelectList.selItems", "text": "retrieves the item from the full list   ", "tags": "", "url": "saph.lists.TSelectList.html#selItems"},
     {"title": "saph.lists.TSelectList.unselItems", "text": "retrieves the item from the list of selected items   ", "tags": "", "url": "saph.lists.TSelectList.html#unselItems"},
     {"title": "saph.lists.TSelectList.allCount", "text": "retrieves the item from the list of unselected items. For debug. I presume that this won't be needed in production property keyall [_index: integer]: string read getKeyItemFromAll; // property keyselItems [_index: integer]: string read getKeyItemFromSelected; property keyunselItems [_index: integer]: string read getKeyItemFromUnselected;   ", "tags": "", "url": "saph.lists.TSelectList.html#allCount"},
     {"title": "saph.lists.TSelectList.selCount", "text": "Count of total items   ", "tags": "", "url": "saph.lists.TSelectList.html#selCount"},
     {"title": "saph.lists.TSelectList.unselCount", "text": "Count of selected items   ", "tags": "", "url": "saph.lists.TSelectList.html#unselCount"},
     {"title": "saph.lists.TSelectList.GItemList", "text": "To return lists from this class. To use, you have to declare variables as: &lt;SpecializedClassName&gt;.GItemList   ", "tags": "", "url": "saph.lists.TSelectList.html#GItemList"},
     {"title": "saph.reactive", "text": "   ", "tags": "", "url": "saph.reactive.html"},
     {"title": "saph.reactive.TReactive", "text": "TReactive   ", "tags": "", "url": "saph.reactive.TReactive.html"},
     {"title": "saph.reactive.TReactive.SGNAME", "text": "   ", "tags": "", "url": "saph.reactive.TReactive.html#SGNAME"},
     {"title": "saph.reactive.TReactive.SGREAD", "text": "   ", "tags": "", "url": "saph.reactive.TReactive.html#SGREAD"},
     {"title": "saph.reactive.TReactive.SGWRITE", "text": "   ", "tags": "", "url": "saph.reactive.TReactive.html#SGWRITE"},
     {"title": "saph.reactive.TReactive.makeKey", "text": "    ", "tags": "", "url": "saph.reactive.TReactive.html#makeKey"},
     {"title": "saph.reactive.TReactive.Create", "text": "    ", "tags": "", "url": "saph.reactive.TReactive.html#Create"},
     {"title": "saph.reactive.TReactive.Destroy", "text": "    ", "tags": "", "url": "saph.reactive.TReactive.html#Destroy"},
     {"title": "saph.reactive.TReactive.value", "text": "    ", "tags": "", "url": "saph.reactive.TReactive.html#value"},
     {"title": "saph.reactive.TReactive.value", "text": "getter    ", "tags": "", "url": "saph.reactive.TReactive.html#value"},
     {"title": "saph.reactive.TReactive.value", "text": "setter    ", "tags": "", "url": "saph.reactive.TReactive.html#value"},
     {"title": "saph.reactive.TReactive.listenRead", "text": "writes a value without unlocking    ", "tags": "", "url": "saph.reactive.TReactive.html#listenRead"},
     {"title": "saph.reactive.TReactive.listenWrite", "text": "Adding read listener    ", "tags": "", "url": "saph.reactive.TReactive.html#listenWrite"},
     {"title": "saph.reactive.TReactive.lock", "text": "Add write listener    ", "tags": "", "url": "saph.reactive.TReactive.html#lock"},
     {"title": "saph.reactive.TReactive.unlock", "text": "locks the value and returns a key. Returns empty string if already locked;    ", "tags": "", "url": "saph.reactive.TReactive.html#unlock"},
     {"title": "saph.reactive.TReactive.undo", "text": "    ", "tags": "", "url": "saph.reactive.TReactive.html#undo"},
     {"title": "saph.reactive.TReactive.redo", "text": "    ", "tags": "", "url": "saph.reactive.TReactive.html#redo"},
     {"title": "saph.reactive.TReactive.name", "text": "   ", "tags": "", "url": "saph.reactive.TReactive.html#name"},
     {"title": "saph.reactive.TReactive.locked", "text": "   ", "tags": "", "url": "saph.reactive.TReactive.html#locked"},
     {"title": "saph.reactive.TReactive.silentLock", "text": "silentLock true: raises an exception when assigning a value to locked object false: does not change value. exits silently.   ", "tags": "", "url": "saph.reactive.TReactive.html#silentLock"},
     {"title": "saph.reactive.TReactive.enableHistory", "text": "Enables undo and redo   ", "tags": "", "url": "saph.reactive.TReactive.html#enableHistory"},
     {"title": "saph.reactive.TRInt", "text": "TRInt   ", "tags": "", "url": "saph.reactive.TRInt.html"},
     {"title": "saph.reactive.TRInt.myValue", "text": "   ", "tags": "", "url": "saph.reactive.TRInt.html#myValue"},
     {"title": "saph.reactive.TRInt.value", "text": "    ", "tags": "", "url": "saph.reactive.TRInt.html#value"},
     {"title": "saph.reactive.TRInt.value", "text": "    ", "tags": "", "url": "saph.reactive.TRInt.html#value"},
     {"title": "saph.reactive.TRInt.listenRead", "text": "    ", "tags": "", "url": "saph.reactive.TRInt.html#listenRead"},
     {"title": "saph.reactive.TRInt.listenWrite", "text": "    ", "tags": "", "url": "saph.reactive.TRInt.html#listenWrite"},
     {"title": "saph.reactive.TRInt.val", "text": "   ", "tags": "", "url": "saph.reactive.TRInt.html#val"},
     {"title": "saph.reactive.TRInt64", "text": "TRInt64   ", "tags": "", "url": "saph.reactive.TRInt64.html"},
     {"title": "saph.reactive.TRInt64.myValue", "text": "   ", "tags": "", "url": "saph.reactive.TRInt64.html#myValue"},
     {"title": "saph.reactive.TRInt64.value", "text": "    ", "tags": "", "url": "saph.reactive.TRInt64.html#value"},
     {"title": "saph.reactive.TRInt64.value", "text": "    ", "tags": "", "url": "saph.reactive.TRInt64.html#value"},
     {"title": "saph.reactive.TRInt64.listenRead", "text": "    ", "tags": "", "url": "saph.reactive.TRInt64.html#listenRead"},
     {"title": "saph.reactive.TRInt64.listenWrite", "text": "    ", "tags": "", "url": "saph.reactive.TRInt64.html#listenWrite"},
     {"title": "saph.reactive.TRInt64.val", "text": "   ", "tags": "", "url": "saph.reactive.TRInt64.html#val"},
     {"title": "saph.reactive.TRDWord", "text": "TRDWord   ", "tags": "", "url": "saph.reactive.TRDWord.html"},
     {"title": "saph.reactive.TRDWord.myValue", "text": "   ", "tags": "", "url": "saph.reactive.TRDWord.html#myValue"},
     {"title": "saph.reactive.TRDWord.value", "text": "    ", "tags": "", "url": "saph.reactive.TRDWord.html#value"},
     {"title": "saph.reactive.TRDWord.value", "text": "    ", "tags": "", "url": "saph.reactive.TRDWord.html#value"},
     {"title": "saph.reactive.TRDWord.listenRead", "text": "    ", "tags": "", "url": "saph.reactive.TRDWord.html#listenRead"},
     {"title": "saph.reactive.TRDWord.listenWrite", "text": "    ", "tags": "", "url": "saph.reactive.TRDWord.html#listenWrite"},
     {"title": "saph.reactive.TRDWord.val", "text": "   ", "tags": "", "url": "saph.reactive.TRDWord.html#val"},
     {"title": "saph.reactive.TRQWord", "text": "TRQWord   ", "tags": "", "url": "saph.reactive.TRQWord.html"},
     {"title": "saph.reactive.TRQWord.myValue", "text": "   ", "tags": "", "url": "saph.reactive.TRQWord.html#myValue"},
     {"title": "saph.reactive.TRQWord.value", "text": "    ", "tags": "", "url": "saph.reactive.TRQWord.html#value"},
     {"title": "saph.reactive.TRQWord.value", "text": "    ", "tags": "", "url": "saph.reactive.TRQWord.html#value"},
     {"title": "saph.reactive.TRQWord.listenRead", "text": "    ", "tags": "", "url": "saph.reactive.TRQWord.html#listenRead"},
     {"title": "saph.reactive.TRQWord.listenWrite", "text": "    ", "tags": "", "url": "saph.reactive.TRQWord.html#listenWrite"},
     {"title": "saph.reactive.TRQWord.val", "text": "   ", "tags": "", "url": "saph.reactive.TRQWord.html#val"},
     {"title": "saph.reactive.TRFloat", "text": "TRFloat   ", "tags": "", "url": "saph.reactive.TRFloat.html"},
     {"title": "saph.reactive.TRFloat.myValue", "text": "   ", "tags": "", "url": "saph.reactive.TRFloat.html#myValue"},
     {"title": "saph.reactive.TRFloat.value", "text": "    ", "tags": "", "url": "saph.reactive.TRFloat.html#value"},
     {"title": "saph.reactive.TRFloat.value", "text": "    ", "tags": "", "url": "saph.reactive.TRFloat.html#value"},
     {"title": "saph.reactive.TRFloat.listenRead", "text": "    ", "tags": "", "url": "saph.reactive.TRFloat.html#listenRead"},
     {"title": "saph.reactive.TRFloat.listenWrite", "text": "    ", "tags": "", "url": "saph.reactive.TRFloat.html#listenWrite"},
     {"title": "saph.reactive.TRFloat.val", "text": "   ", "tags": "", "url": "saph.reactive.TRFloat.html#val"},
     {"title": "saph.reactive.TRStr", "text": "TRStr   ", "tags": "", "url": "saph.reactive.TRStr.html"},
     {"title": "saph.reactive.TRStr.myValue", "text": "   ", "tags": "", "url": "saph.reactive.TRStr.html#myValue"},
     {"title": "saph.reactive.TRStr.value", "text": "    ", "tags": "", "url": "saph.reactive.TRStr.html#value"},
     {"title": "saph.reactive.TRStr.value", "text": "    ", "tags": "", "url": "saph.reactive.TRStr.html#value"},
     {"title": "saph.reactive.TRStr.listenRead", "text": "    ", "tags": "", "url": "saph.reactive.TRStr.html#listenRead"},
     {"title": "saph.reactive.TRStr.listenWrite", "text": "    ", "tags": "", "url": "saph.reactive.TRStr.html#listenWrite"},
     {"title": "saph.reactive.TRStr.val", "text": "   ", "tags": "", "url": "saph.reactive.TRStr.html#val"},
     {"title": "saph.reactive.TRBool", "text": "TRBool   ", "tags": "", "url": "saph.reactive.TRBool.html"},
     {"title": "saph.reactive.TRBool.myValue", "text": "   ", "tags": "", "url": "saph.reactive.TRBool.html#myValue"},
     {"title": "saph.reactive.TRBool.value", "text": "    ", "tags": "", "url": "saph.reactive.TRBool.html#value"},
     {"title": "saph.reactive.TRBool.value", "text": "    ", "tags": "", "url": "saph.reactive.TRBool.html#value"},
     {"title": "saph.reactive.TRBool.listenRead", "text": "    ", "tags": "", "url": "saph.reactive.TRBool.html#listenRead"},
     {"title": "saph.reactive.TRBool.listenWrite", "text": "    ", "tags": "", "url": "saph.reactive.TRBool.html#listenWrite"},
     {"title": "saph.reactive.TRBool.val", "text": "   ", "tags": "", "url": "saph.reactive.TRBool.html#val"},
     {"title": "saph.reactive.TRDateTime", "text": "TRDateTime   ", "tags": "", "url": "saph.reactive.TRDateTime.html"},
     {"title": "saph.reactive.TRDateTime.myValue", "text": "   ", "tags": "", "url": "saph.reactive.TRDateTime.html#myValue"},
     {"title": "saph.reactive.TRDateTime.value", "text": "    ", "tags": "", "url": "saph.reactive.TRDateTime.html#value"},
     {"title": "saph.reactive.TRDateTime.value", "text": "    ", "tags": "", "url": "saph.reactive.TRDateTime.html#value"},
     {"title": "saph.reactive.TRDateTime.listenRead", "text": "    ", "tags": "", "url": "saph.reactive.TRDateTime.html#listenRead"},
     {"title": "saph.reactive.TRDateTime.listenWrite", "text": "    ", "tags": "", "url": "saph.reactive.TRDateTime.html#listenWrite"},
     {"title": "saph.reactive.TRDateTime.val", "text": "   ", "tags": "", "url": "saph.reactive.TRDateTime.html#val"},
     {"title": "saph.reactive.RInt", "text": "Factory functions    ", "tags": "", "url": "saph.reactive.html#RInt"},
     {"title": "saph.reactive.RInt", "text": "    ", "tags": "", "url": "saph.reactive.html#RInt"},
     {"title": "saph.reactive.RInt64", "text": "    ", "tags": "", "url": "saph.reactive.html#RInt64"},
     {"title": "saph.reactive.RInt64", "text": "    ", "tags": "", "url": "saph.reactive.html#RInt64"},
     {"title": "saph.reactive.RDWord", "text": "    ", "tags": "", "url": "saph.reactive.html#RDWord"},
     {"title": "saph.reactive.RDWord", "text": "    ", "tags": "", "url": "saph.reactive.html#RDWord"},
     {"title": "saph.reactive.RQWord", "text": "    ", "tags": "", "url": "saph.reactive.html#RQWord"},
     {"title": "saph.reactive.RQWord", "text": "    ", "tags": "", "url": "saph.reactive.html#RQWord"},
     {"title": "saph.reactive.RFloat", "text": "    ", "tags": "", "url": "saph.reactive.html#RFloat"},
     {"title": "saph.reactive.RFloat", "text": "    ", "tags": "", "url": "saph.reactive.html#RFloat"},
     {"title": "saph.reactive.RStr", "text": "    ", "tags": "", "url": "saph.reactive.html#RStr"},
     {"title": "saph.reactive.RStr", "text": "    ", "tags": "", "url": "saph.reactive.html#RStr"},
     {"title": "saph.reactive.RBool", "text": "    ", "tags": "", "url": "saph.reactive.html#RBool"},
     {"title": "saph.reactive.RBool", "text": "    ", "tags": "", "url": "saph.reactive.html#RBool"},
     {"title": "saph.reactive.RDateTime", "text": "    ", "tags": "", "url": "saph.reactive.html#RDateTime"},
     {"title": "saph.reactive.RDateTime", "text": "    ", "tags": "", "url": "saph.reactive.html#RDateTime"},
     {"title": "saph.reactive.rFree", "text": "Destructors    ", "tags": "", "url": "saph.reactive.html#rFree"},
     {"title": "saph.reactive.rFree", "text": "syntax sugar for rmFromStore()    ", "tags": "", "url": "saph.reactive.html#rFree"},
     {"title": "saph.reactive.rFree", "text": "syntax sugar for rmFromStore()    ", "tags": "", "url": "saph.reactive.html#rFree"},
     {"title": "saph.reactive.rFree", "text": "syntax sugar for rmFromStore()    ", "tags": "", "url": "saph.reactive.html#rFree"},
     {"title": "saph.reactive.rFree", "text": "syntax sugar for rmFromStore()    ", "tags": "", "url": "saph.reactive.html#rFree"},
     {"title": "saph.reactive.rFree", "text": "syntax sugar for rmFromStore()    ", "tags": "", "url": "saph.reactive.html#rFree"},
     {"title": "saph.reactive.rFree", "text": "syntax sugar for rmFromStore()    ", "tags": "", "url": "saph.reactive.html#rFree"},
     {"title": "saph.reactive.rFree", "text": "syntax sugar for rmFromStore()    ", "tags": "", "url": "saph.reactive.html#rFree"},
     {"title": "saph.reactive.rFree", "text": "syntax sugar for rmFromStore()    ", "tags": "", "url": "saph.reactive.html#rFree"},
     {"title": "saph.reactive.addToStore", "text": "syntax sugar for rmFromStore() Manage    ", "tags": "", "url": "saph.reactive.html#addToStore"},
     {"title": "saph.reactive.rmFromStore", "text": "    ", "tags": "", "url": "saph.reactive.html#rmFromStore"},
     {"title": "saph.reactive.:=", "text": "TRStr    ", "tags": "", "url": "saph.reactive.html#:="},
     {"title": "saph.reactive.=", "text": "    ", "tags": "", "url": "saph.reactive.html#="},
     {"title": "saph.reactive.+", "text": "    ", "tags": "", "url": "saph.reactive.html#+"},
     {"title": "saph.reactive.+", "text": "    ", "tags": "", "url": "saph.reactive.html#+"},
     {"title": "saph.reactive.+", "text": "    ", "tags": "", "url": "saph.reactive.html#+"}
]};
